[tool.poetry]
name = "LaBonneBoite"
version = "0.1.0"
description = ""
authors = ["La Bonne Boite <labonneboite@pole-emploi.fr>"]
license  = "GPL-3.0-only"
keywords = ["labonneboite"]
readme = "README.md"
packages = [
    { include = "labonneboite" }
]
repository = "https://github.com/StartupsPoleEmploi/labonneboite-common"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.scripts]
create_index = "labonneboite.scripts.create_index:run"

[tool.poetry.dependencies]
python = "^3.10"
# labonneboite dependency
labonneboite-common = "0.3.0"
# for this app
alembic = "^1.8.1"
async_generator = "^1.10"
Babel = "^2.10.3"
Brotli = "^1.0.9"
cachetools = "^5.2.0"
cssmin = "^0.2.0"
dnspython = "^2.2.1"
elasticsearch = "^1.9.0"
email-validator = "^1.2.1"
Flask = "^2.2.2"
Flask-Admin = "^1.6.0"
Flask-Assets = "^2.0"
Flask-BabelEx = "^0.9.4"
Flask-BasicAuth = "^0.2.0"
Flask-Cors = "^3.0.10"
Flask-DebugToolbar = "^0.13.1"
Flask-Login = "^0.6.2"
Flask-Script = "^2.0.6"
Flask-Testing = "^0.8.1"
Flask-WTF = "^1.0.1"
geographiclib = "^1.52"
gevent = "^21.12.0"
geventhttpclient = "^2.0.2"
google-api-python-client = "^2.58.0"
google-auth-oauthlib = "^0.5.2"
googleapis-common-protos = "^1.56.4"
jsmin = "^3.0.1"
line-profiler = "^3.5.1"
mailjet-rest = "^1.3.4"
mysqlclient="^2.1.1"
numpy = "^1.23.2"
pandas = "^1.4.4"
parameterized = "^0.8.1"
pyprof2calltree = "^1.4.5"
python-dateutil = "^2.8.2"
python-slugify = "^6.1.2"
raven = {extras = ["flask"], version = "^6.10.0"}
requests = "^2.28.1"
sentry-sdk = "^1.9.8"
social-auth-app-flask = "^1.0.0"
social-auth-app-flask-sqlalchemy = "^1.0.1"
social-auth-core = {extras = ["openidconnect"], version = "^4.2.0"}
speaklater = "^1.3"
sqlalchemy = "^1.3.24"
sqlalchemy-utils = "0.38.3"
validators = "^0.20.0"
WTForms = "^3.0.1"
xhtml2pdf = "^0.2.8"
zipp = "^3.6.0"
gunicorn = "^20.1.0"
geopy = "^2.2.0"
astroid = "^2.12.10"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
pytest-cov = "^3.0.0"
flake8 = "^5.0.4"
flake8-junit-report = "^2.1.0"
coverage = "^6.4.4"
locust = "^2.12.1" # not sure
selenium = "^4.4.3"
EasyProcess = "^1.1"
pytest-env = "^0.6.2"
pytest-flask-sqlalchemy = "^1.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov"
testpaths = [
    "labonneboite/tests/",
]
python_files = "test_*.py"

env = [
    "LBB_ENV = test",
    "LBB_SETTINGS = test",
    "ES_HOST = http://localhost:9200"
]

# https://github.com/jeancochrane/pytest-flask-sqlalchemy#from-pypi
mocked-engines="labonneboite.common.database.engine"
# mocked-sessions="labonneboite.common.database.db_session"

[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]

[tool.coverage.report]
precision = 1
show_missing = true
ignore_errors = true
exclude_lines =[
    "pragma: no cover",
    "raise NotImplementedError",
    "def __repr__",
    "if settings.DEBUG",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
    ]
omit = [
    "*/test*",
    "*/migrations/*",
    "manage.py",
    "venv/*"
    ]