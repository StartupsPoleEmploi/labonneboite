version: "3.7"

x-test-base:
  &test-base
  restart: "no"
  profiles:
    - test
  networks:
    - lbb_testing_network

# settings
x-db-env:
  &dbenv
  MYSQL_ROOT_PASSWORD: password
  MYSQL_DATABASE: lbb_test
  MYSQL_USER: lbb_test
  MYSQL_PASSWORD: labonneboite

x-common-env:
  # database
  &cenv
  DB_NAME: lbb_test
  DB_USER: lbb_test
  DB_PASSWORD: labonneboite
  DB_HOST: testing_mysql
  DB_PORT: 3306
  # elastic search
  ES_HOST: testing_elasticsearch:9200
  # other
  OFFICE_TABLE: etablissements
  LBB_ENV: test

services:

  app:
    <<: *test-base
    hostname: labonneboite-backend
    build:
      context: .
      dockerfile: docker/v3.10/Dockerfile
    environment:
      <<: *cenv
    volumes:
      - ./labonneboite/alembic/sql/testing:/sql
      - testResults:/labonneboite/testResults
    entrypoint: /bin/bash ./entrypoints/test.sh
    depends_on:
      testing_elasticsearch:
        condition: service_healthy
      testing_mysql:
        condition: service_healthy

  # ###### 3rd-party services
  # # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
  # # https://www.elastic.co/blog/how-to-make-a-dockerfile-for-elasticsearch
  testing_elasticsearch:
    <<: *test-base
    hostname: elasticsearch
    image: elasticsearch:1.7.2
    environment:
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
      - "cluster.name=lbb"
      - "bootstrap.memory_lock=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl --fail localhost:9200/_cat/health || exit 1
      interval: 10s
      retries: 5
      timeout: 2s

  # database
  testing_mysql:
    <<: *test-base
    image: mysql:5.6.36
    environment:
      <<: *dbenv
    volumes:
      - ./labonneboite/alembic/sql/testing.initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=password --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5

# the volume to collect testResults xml files should be defined like this
volumes:
  testResults:
    external: true

networks:
  lbb_testing_network: {}
